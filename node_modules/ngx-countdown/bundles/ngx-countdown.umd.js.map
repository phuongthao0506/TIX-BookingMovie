{"version":3,"file":"ngx-countdown.umd.js","sources":["../../../lib/src/interfaces.ts","../../../lib/src/countdown.timer.ts","../../../lib/src/countdown.config.ts","../../../lib/src/countdown.component.ts","../../../lib/src/countdown.module.ts","../../../lib/src/ngx-countdown.ts"],"names":["CountdownStatus","Injectable","NgZone","formatDate","Inject","LOCALE_ID","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","ChangeDetectorRef","Input","Output","NgModule","CommonModule"],"mappings":"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","sourcesContent":["export type CountdownFormatFn = (opt: CountdownFormatFnOption) => string;\n\nexport interface CountdownFormatFnOption {\n  date: number;\n  formatStr: string;\n  timezone?: string;\n}\n\nexport enum CountdownStatus {\n  ing,\n  pause,\n  stop,\n  done,\n}\n\nexport interface CountdownConfig {\n  /**\n   * Start the counter on demand, must call `begin()` to starting, Default: `false`\n   */\n  demand?: boolean;\n\n  /**\n   * Calculate the remaining time based on the server, e.g: `10`,`5.5`, (Unit: seconds)\n   */\n  leftTime?: number;\n\n  /**\n   * Refers to counting down from local time to end time (Unit: Milliseconds second UNIX timestamp)\n   */\n  stopTime?: number;\n\n  /**\n   * Formats a date value, pls refer to [Accepted patterns](https://angular.io/api/common/DatePipe#usage-notes), Default: `HH:mm:ss`\n   */\n  format?: string;\n\n  /**\n   * Beautify text, generally used to convert formatted time text into HTML\n   */\n  prettyText?: (text: string) => string;\n\n  /**\n   * Should be trigger type `notify` event on the x second. When values is `0` will be trigger every time.\n   */\n  notify?: number[] | number;\n\n  /**\n   * Default based on the implementation of `formatDate` in `@angular/common`\n   *\n   * You can changed to other libs, e.g: [date-fns](https://date-fns.org/v2.0.1/docs/format)\n   */\n  formatDate?: CountdownFormatFn;\n\n  /**\n   * A timezone offset (such as '+0430'), or a standard UTC/GMT.\n   * When not supplied, uses the end-user's local system timezone, Default: `+0000`\n   */\n  timezone?: string;\n}\n\nexport type CountdownEventAction = 'start' | 'stop' | 'restart' | 'pause' | 'resume' | 'notify' | 'done';\n\nexport interface CountdownEvent {\n  action: CountdownEventAction;\n  status: CountdownStatus;\n  left: number;\n  text: string;\n}\n\nexport interface CountdownItem {\n  text?: string;\n  value?: number;\n}\n","import { Injectable, NgZone } from '@angular/core';\n\n@Injectable()\nexport class CountdownTimer {\n  private fns: Array<((count: number) => number | void) | number> = [];\n  private commands: Array<() => void> = [];\n  private nextTime: number;\n  private ing = false;\n\n  constructor(private ngZone: NgZone) {}\n\n  start(): void {\n    if (this.ing === true) {\n      return;\n    }\n\n    this.ing = true;\n    this.nextTime = +new Date();\n    this.ngZone.runOutsideAngular(() => {\n      this.process();\n    });\n  }\n\n  private process(): void {\n    while (this.commands.length) {\n      this.commands.shift()();\n    }\n    let diff = +new Date() - this.nextTime;\n    const count = 1 + Math.floor(diff / 100);\n\n    diff = 100 - (diff % 100);\n    this.nextTime += 100 * count;\n\n    for (let i = 0, len = this.fns.length; i < len; i += 2) {\n      let frequency = this.fns[i + 1] as number;\n\n      // 100/s\n      if (0 === frequency) {\n        (this.fns[i] as (count: number) => void)(count);\n        // 1000/s\n      } else {\n        // 先把末位至0，再每次加2\n        frequency += 2 * count - 1;\n\n        const step = Math.floor(frequency / 20);\n        if (step > 0) {\n          (this.fns[i] as (count: number) => void)(step);\n        }\n\n        // 把末位还原成1\n        this.fns[i + 1] = (frequency % 20) + 1;\n      }\n    }\n\n    if (!this.ing) {\n      return;\n    }\n\n    setTimeout(() => this.process(), diff);\n  }\n\n  add(fn: () => void, frequency: number): this {\n    this.commands.push(() => {\n      this.fns.push(fn);\n      this.fns.push(frequency === 1000 ? 1 : 0);\n      this.ing = true;\n    });\n    return this;\n  }\n\n  remove(fn: () => void): this {\n    this.commands.push(() => {\n      const i = this.fns.indexOf(fn);\n      if (i !== -1) {\n        this.fns.splice(i, 2);\n      }\n      this.ing = this.fns.length > 0;\n    });\n    return this;\n  }\n}\n","// tslint:disable: no-inferrable-types\nimport { Injectable, Inject, LOCALE_ID } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { CountdownFormatFn, CountdownConfig } from './interfaces';\n\n@Injectable({ providedIn: 'root' })\nexport class CountdownGlobalConfig implements CountdownConfig {\n  constructor(@Inject(LOCALE_ID) private locale: string) {}\n\n  demand?: boolean = false;\n\n  leftTime?: number = 0;\n\n  format?: string = 'HH:mm:ss';\n\n  timezone?: string = '+0000';\n\n  formatDate?: CountdownFormatFn = ({ date, formatStr, timezone }) => {\n    return formatDate(new Date(date), formatStr, this.locale, timezone || this.timezone || '+0000');\n  }\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  OnInit,\n  SimpleChange,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Inject,\n  LOCALE_ID,\n  ChangeDetectorRef,\n  TemplateRef,\n  NgZone,\n} from '@angular/core';\n\nimport { CountdownConfig, CountdownStatus, CountdownEvent, CountdownEventAction, CountdownItem } from './interfaces';\nimport { CountdownTimer } from './countdown.timer';\nimport { CountdownGlobalConfig } from './countdown.config';\n\n@Component({\n  selector: 'countdown',\n  template: `\n    <ng-container *ngIf=\"!render\">\n      <span [innerHTML]=\"i.text\"></span>\n    </ng-container>\n    <ng-container *ngTemplateOutlet=\"render; context: { $implicit: i }\"></ng-container>\n  `,\n  host: { '[class.count-down]': 'true' },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CountdownComponent implements OnInit, OnChanges, OnDestroy {\n  private frequency = 1000;\n  private _notify: { [key: number]: boolean } = {};\n  private status: CountdownStatus = CountdownStatus.ing;\n  private isDestroy = false;\n  private _config: CountdownConfig;\n  i: CountdownItem = {};\n  left = 0;\n\n  @Input()\n  set config(i: CountdownConfig) {\n    if (i.notify != null && !Array.isArray(i.notify) && i.notify > 0) {\n      i.notify = [i.notify];\n    }\n    this._config = i;\n  }\n  get config(): CountdownConfig {\n    return this._config;\n  }\n  @Input() render: TemplateRef<void>;\n  @Output() readonly event = new EventEmitter<CountdownEvent>();\n\n  constructor(\n    @Inject(LOCALE_ID) private locale: string,\n    private timer: CountdownTimer,\n    private defCog: CountdownGlobalConfig,\n    private cdr: ChangeDetectorRef,\n    private ngZone: NgZone,\n  ) {}\n\n  /**\n   * Start countdown, you must manually call when `demand: false`\n   */\n  begin(): void {\n    this.status = CountdownStatus.ing;\n    this.callEvent('start');\n  }\n\n  /**\n   * Restart countdown\n   */\n  restart(): void {\n    if (this.status !== CountdownStatus.stop) {\n      this.destroy();\n    }\n    this.init();\n    this.callEvent('restart');\n  }\n\n  /**\n   * Stop countdown, must call `restart` when stopped, it's different from pause, unable to recover\n   */\n  stop(): void {\n    if (this.status === CountdownStatus.stop) {\n      return;\n    }\n    this.status = CountdownStatus.stop;\n    this.destroy();\n    this.callEvent('stop');\n  }\n\n  /**\n   * Pause countdown, you can use `resume` to recover again\n   */\n  pause(): void {\n    if (this.status === CountdownStatus.stop || this.status === CountdownStatus.pause) {\n      return;\n    }\n    this.status = CountdownStatus.pause;\n    this.callEvent('pause');\n  }\n\n  /**\n   * Resume countdown\n   */\n  resume(): void {\n    if (this.status === CountdownStatus.stop || this.status !== CountdownStatus.pause) {\n      return;\n    }\n    this.status = CountdownStatus.ing;\n    this.callEvent('resume');\n  }\n\n  private callEvent(action: CountdownEventAction): void {\n    this.event.emit({ action, left: this.left, status: this.status, text: this.i.text });\n  }\n\n  private init(): void {\n    const { locale, defCog } = this;\n    const config = (this.config = {\n      ...new CountdownGlobalConfig(locale),\n      ...defCog,\n      ...this.config,\n    });\n    // tslint:disable-next-line: no-bitwise\n    const frq = (this.frequency = ~config.format.indexOf('S') ? 100 : 1000);\n    this.status = config.demand ? CountdownStatus.pause : CountdownStatus.ing;\n\n    this.getLeft();\n\n    // bind reflow to me\n    const _reflow = this.reflow;\n    this.reflow = (count: number = 0, force: boolean = false) => _reflow.apply(this, [count, force]);\n\n    if (Array.isArray(config.notify)) {\n      config.notify.forEach((time: number) => {\n        if (time < 1) {\n          throw new Error(`The notify config must be a positive integer.`);\n        }\n\n        time = time * 1000;\n        time = time - (time % frq);\n        this._notify[time] = true;\n      });\n    }\n\n    this.timer.add(this.reflow, frq).start();\n\n    this.reflow(0, true);\n  }\n\n  private destroy(): this {\n    this.timer.remove(this.reflow);\n    return this;\n  }\n\n  /**\n   * 更新时钟\n   */\n  private reflow(count: number = 0, force: boolean = false): void {\n    if (this.isDestroy) {\n      return;\n    }\n\n    const { status, config, _notify } = this;\n    if (!force && status !== CountdownStatus.ing) {\n      return;\n    }\n\n    let value = (this.left = this.left - this.frequency * count);\n    if (value < 1) {\n      value = 0;\n    }\n    this.i = {\n      value,\n      text: config.formatDate({ date: value, formatStr: config.format, timezone: config.timezone }),\n    };\n    if (typeof config.prettyText === 'function') {\n      this.i.text = config.prettyText(this.i.text);\n    }\n    this.cdr.detectChanges();\n\n    if (config.notify === 0 || _notify[value]) {\n      this.ngZone.run(() => {\n        this.callEvent('notify');\n      });\n    }\n\n    if (value === 0) {\n      this.ngZone.run(() => {\n        this.status = CountdownStatus.done;\n        this.destroy();\n        this.callEvent('done');\n      });\n    }\n  }\n\n  /**\n   * 获取倒计时剩余帧数\n   */\n  private getLeft(): void {\n    const { config, frequency } = this;\n    let left = config.leftTime * 1000;\n    const end = config.stopTime;\n\n    if (!left && end) {\n      left = end - new Date().getTime();\n    }\n\n    this.left = left - (left % frequency);\n  }\n\n  ngOnInit(): void {\n    this.init();\n    if (!this.config.demand) {\n      this.begin();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroy = true;\n    this.destroy();\n  }\n\n  ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n    if (!changes.config.firstChange) {\n      this.restart();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { CountdownComponent } from './countdown.component';\nimport { CountdownTimer } from './countdown.timer';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [CountdownTimer],\n  declarations: [CountdownComponent],\n  exports: [CountdownComponent],\n})\nexport class CountdownModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}